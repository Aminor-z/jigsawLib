#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME};#end
#parse("File Header.java")

import cn.aminorz.jigsaw.jigsaw.JigsawPiece;
import cn.aminorz.jigsaw.jigsaw.JigsawSide;
import net.minecraft.nbt.CompoundNBT;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.MutableBoundingBox;
import net.minecraft.world.IWorld;
import net.minecraft.world.gen.feature.structure.IStructurePieceType;
import net.minecraft.world.gen.feature.template.TemplateManager;
import java.util.Random;

import static cn.aminorz.jigsaw.util.math.SimpleDirection.*;

public class ${NAME} extends JigsawPiece {
    private static final ${NAME} instance=new ${NAME}();
    public static ${NAME} getInstance(){return instance;}
    //set your registered feature here
    private static final IStructurePieceType ISPT_${NAME} = ISPT_${NAME};
    //set your nbt file here
    private static  final ResourceLocation resourceLocation = new ResourceLocation("modid","NBT_StructureLocation");
    private static JigsawSide jigsawSide = new JigsawSide();

    static {
        //register side type here
    }

    public ${NAME}() {
        super(ISPT_${NAME});
    }

    public ${NAME}(TemplateManager manager, BlockPos pos) {
        super(ISPT_${NAME}, manager, pos);
    }

    public ${NAME}(TemplateManager manager, CompoundNBT nbt) {
        super(ISPT_${NAME}, manager, nbt);
    }

    @Override
    protected ResourceLocation getResourceLocation() {
        return resourceLocation;
    }

    @Override
    protected boolean isIgnoreEntities() {
        return false;
    }

    @Override
    public JigsawSide getJigsawSide() {
        return jigsawSide;
    }

    @Override
    protected void handleDataMarker(String s, BlockPos blockPos, IWorld iWorld, Random random, MutableBoundingBox mutableBoundingBox) {
    }
}
